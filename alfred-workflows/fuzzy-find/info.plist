<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.nicksergeant.fuzzy-find</string>
	<key>connections</key>
	<dict>
		<key>HOTKEY-REFRESH</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>REFRESH-SCRIPT</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>58B6B1AC-5DD8-4B2B-A168-47A5F2C5CC3C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A2D3B5FA-9B12-4F1E-8C23-1A2B3C4D5E6F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Nick Sergeant</string>
	<key>description</key>
	<string>Blazing fast fuzzy file/folder search using fd and fzf</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Fuzzy Find</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>f</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>1</integer>
				<key>queuemode</key>
				<integer>2</integer>
				<key>runningsubtext</key>
				<string>Searching...</string>
				<key>script</key>
				<string>./search.sh "$1"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Fuzzy search files and folders</string>
				<key>title</key>
				<string>Search files/folders</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>58B6B1AC-5DD8-4B2B-A168-47A5F2C5CC3C</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>openwith</key>
				<string></string>
				<key>sourcefile</key>
				<string></string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openfile</string>
			<key>uid</key>
			<string>A2D3B5FA-9B12-4F1E-8C23-1A2B3C4D5E6F</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>hotstring</key>
				<string></string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>HOTKEY-REFRESH</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>rm -f /tmp/alfred_fd_cache

# Get the last query if it exists
if [ -f /tmp/alfred_fd_last_query ]; then
    last_query=$(cat /tmp/alfred_fd_last_query)
    # Tell Alfred to search with the last query
    osascript -e "tell application \"Alfred 5\" to search \"f $last_query\""
else
    # Just open Alfred with "f " if no previous query
    osascript -e 'tell application "Alfred 5" to search "f "'
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>REFRESH-SCRIPT</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Blazing fast fuzzy file/folder search using fd and fzf.

Features:
- True fuzzy matching like fzf (e.g., "pub v2" → "public/flxwebsites-v2")
- Abbreviation matching (e.g., "nar" → "Notes and Reference")  
- Cached file indexing for instant results (24-hour cache, refresh with hotkey)
- Respects common exclusions (node_modules, dotfiles, Library, etc.)

Requirements:
- fd (install with: brew install fd)
- fzf (install with: brew install fzf)

Usage:
Type 'f' followed by your search query. Set a hotkey to refresh the cache manually.

Examples:
- f pub v2 (matches "public/flxwebsites-v2")
- f dcalc (matches "distance calculator.xlsx")
- f nar (matches "Notes and Reference")</string>
	<key>uidata</key>
	<dict>
		<key>58B6B1AC-5DD8-4B2B-A168-47A5F2C5CC3C</key>
		<dict>
			<key>xpos</key>
			<real>180</real>
			<key>ypos</key>
			<real>50</real>
		</dict>
		<key>A2D3B5FA-9B12-4F1E-8C23-1A2B3C4D5E6F</key>
		<dict>
			<key>xpos</key>
			<real>380</real>
			<key>ypos</key>
			<real>50</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array/>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>1.1.0</string>
	<key>webaddress</key>
	<string>https://github.com/nicksergeant/dotfiles/tree/master/alfred-workflows/fuzzy-find</string>
	<key>uidata</key>
	<dict>
		<key>58B6B1AC-5DD8-4B2B-A168-47A5F2C5CC3C</key>
		<dict>
			<key>xpos</key>
			<real>50</real>
			<key>ypos</key>
			<real>200</real>
		</dict>
		<key>A2D3B5FA-9B12-4F1E-8C23-1A2B3C4D5E6F</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>200</real>
		</dict>
		<key>HOTKEY-REFRESH</key>
		<dict>
			<key>xpos</key>
			<real>50</real>
			<key>ypos</key>
			<real>50</real>
		</dict>
		<key>REFRESH-SCRIPT</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>50</real>
		</dict>
	</dict>
</dict>
</plist>
